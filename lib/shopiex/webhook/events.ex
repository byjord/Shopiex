defmodule Shopiex.Events do
  @moduledoc """
  Events are generated by some Shopify resources when certain actions are completed, such as the creation of an article, the fulfillment of an order, or the addition of a product. By requesting events, your app can know when certain actions have occurred in the shop.

  The events returned by the Event resource should not be considered to be realtime. Events might not be created until a few seconds after the action occurs. In rare cases it can take up to a few minutes for some events to appear.
  """

  @type events_options :: [
    limit: non_neg_integer(),
    page: non_neg_integer(),
    since_id: non_neg_integer(),
    created_at_min: String.t(),
    created_at_max: String.t(),
    filter: String.t(),
    verb: String.t(),
    fields: String.t()
  ]

  @type events_count :: [
    created_at_min: String.t(),
    created_at_max: String.t()
  ]

  @doc """
  Retrieve a list of all events for a shop
  """
  @spec all(client :: Shopiex.client(), event_options :: events_options()) :: Shopiex.return_tuple()
  def all(client, options) do
    {client, "/admin/events.json#{flatten_options(options)}", %{format: "json"}}
  end

  @doc """
  Retrieve all events from a specific product
  """
  @spec product_events(client :: Shopiex.client(), product_id :: String.t(), event_options :: events_options()) :: Shopiex.return_tuple()
  def product_events(client, product_id, options) do
    {client, "/admin/products/#{product_id}/events.json#{flatten_options(options)}", %{format: "json"}}
  end

  @doc """
  Retrieve a list of all events from a specific order
  """
  @spec order_events(client :: Shopiex.client(), order_id :: String.t(), event_options :: events_options()) :: Shopiex.return_tuple()
  def order_events(client, order_id, options) do
    {client, "/admin/order/#{order_id}/events.json#{flatten_options(options)}", %{format: "json"}}
  end

  defp flatten_options([]), do: ""
  defp flatten_options(options),
    do: "?" <> Shopiex.BuildParams.build_and_join(options)
end
